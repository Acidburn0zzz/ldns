/**
   \page tutorial1_mx Tutorial 1: Querying for MX records
   \dontinclude ldns-mx.c 
   
   The full source code can be found in \link examples/ldns-mx.c \endlink
   
   This is a simple example that queries for an MX record
  
   First of all, we need to include the correct header files, so
   that all functions are available to us:
  
   \skip include
   \until dns.h
 
   in our main function, we declare some variables that we are going to use:

   \skipline ldns_resolver
   \until ldns_status

   - The \c ldns_resolver structure keeps a list of nameservers, and can perform queries for us
   - An \c ldns_rdf is a basic data type of dns, the RDATA. See (todo link) overview for a description about the building blocks of DNS.
     \c domain will contain the name the user specifies when calling the program
   - An \c ldns_pkt is a DNS packet, for instance a complete query, or an answer
   - The \c ldns_rr_list structure contains a list of DNS Resource Records (RRs). In this case, we will store the MX records we find in the list.
   - \c ldns_status is the basic type for status messages in ldns. Most functions will return a value of this type.

   
   First, we parse the command line argument (checks omitted on this page, see full source code), and store it in our \c domain variable:
   \skipline ldns_dname_new_frm_str

   Then, we create the resolver structure:
   \skipline ldns_resolver_new

   We tell the resolver to query for our domain, type MX, of class IN:
   \skipline ldns_resolver_query
   \until )

   This should return a packet if everything goes well.

   We get all RRs of type MX from the answer packet and store them in our list:
   \skipline ldns_pkt_rr_list_by_type
   \until )
   
   If this list is not empty, we sort and print it:
   \skipline ldns_rr_list_sort
   \skipline ldns_rr_list_print
*/
