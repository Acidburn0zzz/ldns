#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2.1).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 2006-04-06 10:51 CEST by <miekg@elektron>.
# Source directory was `/home/miekg/svn/ldns/trunk/test/14-read-zone.dir'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#    573 -rw------- 14-read-zone.db
#    295 -rw------- 14-read-zone.dsc
#     24 -rw------- 14-read-zone.help
#    259 -rw------- 14-read-zone.test
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
if touch -am -t 200112312359.59 $$.touch >/dev/null 2>&1 && test ! -f 200112312359.59 -a -f $$.touch; then
  shar_touch='touch -am -t $1$2$3$4$5$6.$7 "$8"'
elif touch -am 123123592001.59 $$.touch >/dev/null 2>&1 && test ! -f 123123592001.59 -a ! -f 123123592001.5 -a -f $$.touch; then
  shar_touch='touch -am $3$4$5$6$1$2.$7 "$8"'
elif touch -am 1231235901 $$.touch >/dev/null 2>&1 && test ! -f 1231235901 -a -f $$.touch; then
  shar_touch='touch -am $3$4$5$6$2 "$8"'
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 200112312359.59 123123592001.59 123123592001.5 1231235901 $$.touch
#
if mkdir _sh01016; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= 14-read-zone.db ==============
if test -f '14-read-zone.db' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '14-read-zone.db' '(file already exists)'
else
  $echo 'x -' extracting '14-read-zone.db' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > '14-read-zone.db' &&
;
; BIND data file for miek.nl for internal use
;
$TTL    1H
@       IN      SOA     elektron.atoom.net. miekg.atoom.net. (
X                     2005060700         ; Serial
X                             6H         ; Refresh
X                             2H         ; Retry
X                             7D         ; Expire
X                             1H )       ; Negative Cache TTL
X
@       IN      NS      elektron.atoom.net.
@	IN	MX	10 elektron.atoom.net.
@	IN	A	192.168.1.2
X
a	IN	A	192.168.1.2
www     IN      CNAME   a
; hallo
X
X
;
www     in      A      127.0.0.1
; bla
SHAR_EOF
  (set 20 06 04 06 10 51 02 '14-read-zone.db'; eval "$shar_touch") &&
  chmod 0600 '14-read-zone.db' ||
  $echo 'restore of' '14-read-zone.db' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '14-read-zone.db:' 'MD5 check failed'
fca1e503ad2f95572459270338f76fcd  14-read-zone.db
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '14-read-zone.db'`"
    test 573 -eq "$shar_count" ||
    $echo '14-read-zone.db:' 'original size' '573,' 'current size' "$shar_count!"
  fi
fi
# ============= 14-read-zone.dsc ==============
if test -f '14-read-zone.dsc' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '14-read-zone.dsc' '(file already exists)'
else
  $echo 'x -' extracting '14-read-zone.dsc' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > '14-read-zone.dsc' &&
BaseName: 14-read-zone
Version: 1.0
Description: read a zone with comment on the last line
CreationDate: Thu Apr  6 10:50:19 CEST 2006
Maintainer: Miek Gieben
Category: 
Component:
Depends: 
Help: 14-read-zone.help
Pre: 
Post: 
Test: 14-read-zone.test
AuxFiles: 14-read-zone.db
Passed:
Failure:
SHAR_EOF
  (set 20 06 04 06 10 51 22 '14-read-zone.dsc'; eval "$shar_touch") &&
  chmod 0600 '14-read-zone.dsc' ||
  $echo 'restore of' '14-read-zone.dsc' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '14-read-zone.dsc:' 'MD5 check failed'
a76883efed41b11fe384ef50b0bb245b  14-read-zone.dsc
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '14-read-zone.dsc'`"
    test 295 -eq "$shar_count" ||
    $echo '14-read-zone.dsc:' 'original size' '295,' 'current size' "$shar_count!"
  fi
fi
# ============= 14-read-zone.help ==============
if test -f '14-read-zone.help' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '14-read-zone.help' '(file already exists)'
else
  $echo 'x -' extracting '14-read-zone.help' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > '14-read-zone.help' &&
No arguments are needed
SHAR_EOF
  (set 20 06 04 06 10 51 35 '14-read-zone.help'; eval "$shar_touch") &&
  chmod 0600 '14-read-zone.help' ||
  $echo 'restore of' '14-read-zone.help' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '14-read-zone.help:' 'MD5 check failed'
69207f223738a79bfb450cc9805e4f6b  14-read-zone.help
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '14-read-zone.help'`"
    test 24 -eq "$shar_count" ||
    $echo '14-read-zone.help:' 'original size' '24,' 'current size' "$shar_count!"
  fi
fi
# ============= 14-read-zone.test ==============
if test -f '14-read-zone.test' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '14-read-zone.test' '(file already exists)'
else
  $echo 'x -' extracting '14-read-zone.test' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > '14-read-zone.test' &&
[ -f ../.tpkg.var.master ] && source ../.tpkg.var.master
X
export PATH=$PATH:/usr/sbin:/sbin:/usr/local/bin:/usr/local/sbin:.
X
LD_LIBRARY_PATH=../../lib \
X../../examples/ldns-read-zone db.miek.nl
X
if [[ $? -eq 1 ]]; then 
X        exit 0
else
X        exit 1
fi
SHAR_EOF
  (set 20 06 04 06 10 50 52 '14-read-zone.test'; eval "$shar_touch") &&
  chmod 0600 '14-read-zone.test' ||
  $echo 'restore of' '14-read-zone.test' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '14-read-zone.test:' 'MD5 check failed'
bff9236e5ab90b82052cbbaace1fee79  14-read-zone.test
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '14-read-zone.test'`"
    test 259 -eq "$shar_count" ||
    $echo '14-read-zone.test:' 'original size' '259,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh01016
exit 0
