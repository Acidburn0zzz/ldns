#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2.1).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 2005-11-15 14:55 CET by <miekg@floep>.
# Source directory was `/home/miekg/svn/libdns/trunk/test/05-nm.dir'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#    282 -rw------- 05-nm.dsc
#    171 -rw------- 05-nm.help
#  11689 -rw------- 05-nm.known-good-sym
#    718 -rw------- 05-nm.test
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
if touch -am -t 200112312359.59 $$.touch >/dev/null 2>&1 && test ! -f 200112312359.59 -a -f $$.touch; then
  shar_touch='touch -am -t $1$2$3$4$5$6.$7 "$8"'
elif touch -am 123123592001.59 $$.touch >/dev/null 2>&1 && test ! -f 123123592001.59 -a ! -f 123123592001.5 -a -f $$.touch; then
  shar_touch='touch -am $3$4$5$6$1$2.$7 "$8"'
elif touch -am 1231235901 $$.touch >/dev/null 2>&1 && test ! -f 1231235901 -a -f $$.touch; then
  shar_touch='touch -am $3$4$5$6$2 "$8"'
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 200112312359.59 123123592001.59 123123592001.5 1231235901 $$.touch
#
if mkdir _sh01980; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= 05-nm.dsc ==============
if test -f '05-nm.dsc' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '05-nm.dsc' '(file already exists)'
else
  $echo 'x -' extracting '05-nm.dsc' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > '05-nm.dsc' &&
BaseName: 05-nm
Version: 1.0
Description: Check the backward compatibilty of the library
CreationDate: Tue Nov 15 14:31:50 CET 2005
Maintainer: Miek Gieben
Category: 
Component:
Depends: 
Help: 05-nm.help
Pre: 
Post:
Test: 05-nm.test
AuxFiles: 05-nm.known-good-sym
Passed:
Failure:
SHAR_EOF
  (set 20 05 11 15 14 40 18 '05-nm.dsc'; eval "$shar_touch") &&
  chmod 0600 '05-nm.dsc' ||
  $echo 'restore of' '05-nm.dsc' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '05-nm.dsc:' 'MD5 check failed'
f512267411f9b9ab485da8491743cad4  05-nm.dsc
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '05-nm.dsc'`"
    test 282 -eq "$shar_count" ||
    $echo '05-nm.dsc:' 'original size' '282,' 'current size' "$shar_count!"
  fi
fi
# ============= 05-nm.help ==============
if test -f '05-nm.help' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '05-nm.help' '(file already exists)'
else
  $echo 'x -' extracting '05-nm.help' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > '05-nm.help' &&
No arguments are used for this test.
X
With nm a list of symbols is extracted from the lib, this
is compared to a known good one. When there is a difference
the test fails
SHAR_EOF
  (set 20 05 11 15 14 39 35 '05-nm.help'; eval "$shar_touch") &&
  chmod 0600 '05-nm.help' ||
  $echo 'restore of' '05-nm.help' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '05-nm.help:' 'MD5 check failed'
a21fad18f7a5c2cf38e083ecc974e357  05-nm.help
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '05-nm.help'`"
    test 171 -eq "$shar_count" ||
    $echo '05-nm.help:' 'original size' '171,' 'current size' "$shar_count!"
  fi
fi
# ============= 05-nm.known-good-sym ==============
if test -f '05-nm.known-good-sym' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '05-nm.known-good-sym' '(file already exists)'
else
  $echo 'x -' extracting '05-nm.known-good-sym' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > '05-nm.known-good-sym' &&
b64_ntop
b64_pton
Base64
Base64
buffer2str
call_gmon_start
_fini
frame_dummy
_init
ldns_algorithms
ldns_axfr_complete
ldns_axfr_last_pkt
ldns_axfr_next
ldns_axfr_start
ldns_bget_all_keyword_data
ldns_bgetc
ldns_bget_keyword_data
ldns_bget_token
ldns_bskipc
ldns_bskipcs
ldns_buffer2pkt_wire
ldns_buffer_clear
ldns_buffer_export
ldns_buffer_flip
ldns_buffer_free
ldns_buffer_new
ldns_buffer_new_frm_data
ldns_buffer_printf
ldns_buffer_reserve
ldns_buffer_rewind
ldns_buffer_set_capacity
ldns_calc_keytag
ldns_cert_algorithms
ldns_create_nsec
ldns_create_tsig_mac
ldns_directive_new_frm_str
ldns_directive_types
ldns_dname2buffer_wire
ldns_dname2canonical
ldns_dname_cat
ldns_dname_cat_clone
ldns_dname_compare
ldns_dname_is_subdomain
ldns_dname_label
ldns_dname_label_count
ldns_dname_left_chop
ldns_dname_new
ldns_dname_new_frm_data
ldns_dname_new_frm_str
ldns_dname_str_absolute
ldns_edns_flags
ldns_error_str
ldns_fget_all_keyword_data
ldns_fget_keyword_data
ldns_fget_keyword_data_l
ldns_fget_token
ldns_fget_token_l
ldns_fskipc
ldns_fskipcs
ldns_fskipcs_l
ldns_getaddrinfo
ldns_getaddrinfo_secure
ldns_get_bit
ldns_get_bit_r
ldns_get_digest_function
ldns_get_errorstr_by_id
ldns_get_rr_class_by_name
ldns_get_rr_list_addr_by_name
ldns_get_rr_list_hosts_frm_file
ldns_get_rr_list_hosts_frm_fp
ldns_get_rr_list_hosts_frm_fp_l
ldns_get_rr_list_name_by_addr
ldns_get_rr_type_by_name
ldns_hexdigit_to_int
ldns_init_random
ldns_int_to_hexdigit
ldns_is_rrset
ldns_key2buffer_str
ldns_key2rr
ldns_key2str
ldns_key_algorithm
ldns_key_buf2dsa
ldns_key_buf2rsa
ldns_key_deep_free
ldns_key_dsa_key
ldns_key_expiration
ldns_key_flags
ldns_key_free
ldns_key_hmac_key
ldns_key_inception
ldns_key_keytag
ldns_key_list_free
ldns_key_list_key
ldns_key_list_key_count
ldns_key_list_new
ldns_key_list_pop_key
ldns_key_list_push_key
ldns_key_list_set_key_count
ldns_key_new
ldns_key_new_frm_algorithm
ldns_key_new_frm_fp
ldns_key_new_frm_fp_dsa
ldns_key_new_frm_fp_dsa_l
ldns_key_new_frm_fp_l
ldns_key_new_frm_fp_rsa
ldns_key_new_frm_fp_rsa_l
ldns_key_origttl
ldns_key_print
ldns_key_pubkey_owner
ldns_key_rr2ds
ldns_key_rsa2bin
ldns_key_rsa_key
ldns_key_set_algorithm
ldns_key_set_dsa_key
ldns_key_set_expiration
ldns_key_set_flags
ldns_key_set_hmac_key
ldns_key_set_inception
ldns_key_set_keytag
ldns_key_set_origttl
ldns_key_set_pubkey_owner
ldns_key_set_rsa_key
ldns_lookup_by_id
ldns_lookup_by_name
ldns_native2rdf_int16
ldns_native2rdf_int16_data
ldns_native2rdf_int32
ldns_native2rdf_int8
ldns_octet
ldns_opcodes
ldns_pkt2buffer_str
ldns_pkt2buffer_wire
ldns_pkt2str
ldns_pkt2wire
ldns_pkt_aa
ldns_pkt_ad
ldns_pkt_additional
ldns_pkt_all
ldns_pkt_all_noquestion
ldns_pkt_ancount
ldns_pkt_answer
ldns_pkt_answerfrom
ldns_pkt_arcount
ldns_pkt_authority
ldns_pkt_cd
ldns_pkt_clone
ldns_pkt_edns
ldns_pkt_edns_data
ldns_pkt_edns_do
ldns_pkt_edns_extended_rcode
ldns_pkt_edns_udp_size
ldns_pkt_edns_version
ldns_pkt_edns_z
ldns_pkt_free
ldns_pkt_get_opcode
ldns_pkt_get_rr
ldns_pkt_get_section_clone
ldns_pktheader2buffer_str
ldns_pkt_id
ldns_pkt_insert_rr
ldns_pkt_new
ldns_pkt_nscount
ldns_pkt_print
ldns_pkt_push_rr
ldns_pkt_qdcount
ldns_pkt_qr
ldns_pkt_query_new
ldns_pkt_query_new_frm_str
ldns_pkt_querytime
ldns_pkt_question
ldns_pkt_ra
ldns_pkt_rcode
ldns_pkt_rd
ldns_pkt_reply_type
ldns_pkt_rr
ldns_pkt_rr_list_by_name
ldns_pkt_rr_list_by_name_and_type
ldns_pkt_rr_list_by_type
ldns_pkt_safe_push_rr
ldns_pkt_section_count
ldns_pkt_set_aa
ldns_pkt_set_ad
ldns_pkt_set_ancount
ldns_pkt_set_answerfrom
ldns_pkt_set_arcount
ldns_pkt_set_cd
ldns_pkt_set_edns_data
ldns_pkt_set_edns_do
ldns_pkt_set_edns_extended_rcode
ldns_pkt_set_edns_udp_size
ldns_pkt_set_edns_version
ldns_pkt_set_edns_z
ldns_pkt_set_flags
ldns_pkt_set_id
ldns_pkt_set_nscount
ldns_pkt_set_opcode
ldns_pkt_set_qdcount
ldns_pkt_set_qr
ldns_pkt_set_querytime
ldns_pkt_set_ra
ldns_pkt_set_random_id
ldns_pkt_set_rcode
ldns_pkt_set_rd
ldns_pkt_set_rr
ldns_pkt_set_section_count
ldns_pkt_set_size
ldns_pkt_set_tc
ldns_pkt_set_timestamp
ldns_pkt_set_tsig
ldns_pkt_set_when
ldns_pkt_size
ldns_pkt_tc
ldns_pkt_timestamp
ldns_pkt_tsig
ldns_pkt_tsig_sign
ldns_pkt_tsig_verify
ldns_pkt_verify
ldns_pkt_when
ldns_rcodes
ldns_rdf2buffer_str
ldns_rdf2buffer_str_a
ldns_rdf2buffer_str_aaaa
ldns_rdf2buffer_str_alg
ldns_rdf2buffer_str_apl
ldns_rdf2buffer_str_b64
ldns_rdf2buffer_str_cert_alg
ldns_rdf2buffer_str_class
ldns_rdf2buffer_str_dname
ldns_rdf2buffer_str_hex
ldns_rdf2buffer_str_int16
ldns_rdf2buffer_str_int16_data
ldns_rdf2buffer_str_int32
ldns_rdf2buffer_str_int8
ldns_rdf2buffer_str_ipseckey
ldns_rdf2buffer_str_loc
ldns_rdf2buffer_str_nsap
ldns_rdf2buffer_str_nsec
ldns_rdf2buffer_str_period
ldns_rdf2buffer_str_str
ldns_rdf2buffer_str_time
ldns_rdf2buffer_str_tsig
ldns_rdf2buffer_str_tsigtime
ldns_rdf2buffer_str_type
ldns_rdf2buffer_str_unknown
ldns_rdf2buffer_str_wks
ldns_rdf2buffer_wire
ldns_rdf2native_int16
ldns_rdf2native_int32
ldns_rdf2native_int8
ldns_rdf2native_sockaddr_storage
ldns_rdf2native_time_t
ldns_rdf2str
ldns_rdf2wire
ldns_rdf_address_reverse
ldns_rdf_clone
ldns_rdf_compare
ldns_rdf_data
ldns_rdf_deep_free
ldns_rdf_free
ldns_rdf_get_type
ldns_rdf_new
ldns_rdf_new_frm_data
ldns_rdf_new_frm_fp
ldns_rdf_new_frm_fp_l
ldns_rdf_new_frm_str
ldns_rdf_print
ldns_rdf_set_data
ldns_rdf_set_size
ldns_rdf_set_type
ldns_rdf_size
ldns_resolver_bgsend
ldns_resolver_debug
ldns_resolver_dec_nameserver_count
ldns_resolver_deep_free
ldns_resolver_defnames
ldns_resolver_dnsrch
ldns_resolver_dnssec
ldns_resolver_dnssec_cd
ldns_resolver_domain
ldns_resolver_edns_udp_size
ldns_resolver_fail
ldns_resolver_igntc
ldns_resolver_incr_nameserver_count
ldns_resolver_ip6
ldns_resolver_nameserver_count
ldns_resolver_nameservers
ldns_resolver_new
ldns_resolver_new_frm_file
ldns_resolver_new_frm_fp
ldns_resolver_new_frm_fp_l
ldns_resolver_pop_nameserver
ldns_resolver_port
ldns_resolver_print
ldns_resolver_push_nameserver
ldns_resolver_push_nameserver_rr
ldns_resolver_push_nameserver_rr_list
ldns_resolver_push_searchlist
ldns_resolver_query
ldns_resolver_random
ldns_resolver_recursive
ldns_resolver_retrans
ldns_resolver_retry
ldns_resolver_searchlist
ldns_resolver_send
ldns_resolver_send_pkt
ldns_resolver_set_debug
ldns_resolver_set_defnames
ldns_resolver_set_dnsrch
ldns_resolver_set_dnssec
ldns_resolver_set_dnssec_cd
ldns_resolver_set_domain
ldns_resolver_set_edns_udp_size
ldns_resolver_set_fail
ldns_resolver_set_igntc
ldns_resolver_set_ip6
ldns_resolver_set_nameserver_count
ldns_resolver_set_nameservers
ldns_resolver_set_port
ldns_resolver_set_random
ldns_resolver_set_recursive
ldns_resolver_set_retrans
ldns_resolver_set_retry
ldns_resolver_set_searchlist_count
ldns_resolver_set_timeout
ldns_resolver_set_tsig_algorithm
ldns_resolver_set_tsig_keydata
ldns_resolver_set_tsig_keyname
ldns_resolver_set_usevc
ldns_resolver_timeout
ldns_resolver_tsig_algorithm
ldns_resolver_tsig_keydata
ldns_resolver_tsig_keyname
ldns_resolver_usevc
ldns_rr2buffer_str
ldns_rr2buffer_wire
ldns_rr2canonical
ldns_rr2str
ldns_rr2wire
ldns_rr_a_address
ldns_rr_a_set_address
ldns_rr_classes
ldns_rr_clone
ldns_rr_compare
ldns_rr_compare_ds
ldns_rr_compare_oct
ldns_rr_descript
ldns_rr_descriptor_field_type
ldns_rr_descriptor_maximum
ldns_rr_descriptor_minimum
ldns_rr_dnskey_algorithm
ldns_rr_dnskey_flags
ldns_rr_dnskey_key
ldns_rr_dnskey_key_size
ldns_rr_dnskey_protocol
ldns_rr_dnskey_set_algorithm
ldns_rr_dnskey_set_flags
ldns_rr_dnskey_set_key
ldns_rr_dnskey_set_protocol
ldns_rr_free
ldns_rr_function
ldns_rr_get_class
ldns_rr_get_type
ldns_rr_label_count
ldns_rr_list2buffer_str
ldns_rr_list2buffer_wire
ldns_rr_list2canonical
ldns_rr_list2str
ldns_rr_list_cat
ldns_rr_list_cat_clone
ldns_rr_list_clone
ldns_rr_list_contains_rr
ldns_rr_list_deep_free
ldns_rr_list_free
ldns_rr_list_insert_rr
ldns_rr_list_new
ldns_rr_list_pop_rr
ldns_rr_list_pop_rrset
ldns_rr_list_print
ldns_rr_list_push_rr
ldns_rr_list_rr
ldns_rr_list_rr_count
ldns_rr_list_set_rr
ldns_rr_list_set_rr_count
ldns_rr_list_sort
ldns_rr_list_sort_oct
ldns_rr_list_subtype_by_rdf
ldns_rr_mx_exchange
ldns_rr_mx_preference
ldns_rr_new
ldns_rr_new_frm_fp
ldns_rr_new_frm_fp_l
ldns_rr_new_frm_str
ldns_rr_new_frm_type
ldns_rr_ns_nsdname
ldns_rr_owner
ldns_rr_pop_rdf
ldns_rr_print
ldns_rr_push_rdf
ldns_rr_rdata2buffer_wire
ldns_rr_rd_count
ldns_rr_rdf
ldns_rr_rrsig_algorithm
ldns_rr_rrsig_expiration
ldns_rr_rrsig_inception
ldns_rr_rrsig_keytag
ldns_rr_rrsig_labels
ldns_rr_rrsig_origttl
ldns_rr_rrsig_set_algorithm
ldns_rr_rrsig_set_expiration
ldns_rr_rrsig_set_inception
ldns_rr_rrsig_set_keytag
ldns_rr_rrsig_set_labels
ldns_rr_rrsig_set_origttl
ldns_rr_rrsig_set_sig
ldns_rr_rrsig_set_signame
ldns_rr_rrsig_set_typecovered
ldns_rr_rrsig_sig
ldns_rr_rrsig_signame
ldns_rr_rrsig_typecovered
ldns_rr_set_class
ldns_rr_set_function
ldns_rr_set_owner
ldns_rr_set_pop_rr
ldns_rr_set_push_rr
ldns_rr_set_rd_count
ldns_rr_set_rdf
ldns_rr_set_ttl
ldns_rr_set_type
ldns_rrsig2buffer_wire
ldns_rr_ttl
ldns_rr_uncompressed_size
ldns_send
ldns_serial
ldns_set_bit
ldns_signing_algorithms
ldns_sign_public
ldns_sign_public_dsa
ldns_sign_public_rsamd5
ldns_sign_public_rsasha1
ldns_sockaddr_storage2rdf
ldns_str2period
ldns_str2rdf_a
ldns_str2rdf_aaaa
ldns_str2rdf_alg
ldns_str2rdf_apl
ldns_str2rdf_b64
ldns_str2rdf_cert_alg
ldns_str2rdf_class
ldns_str2rdf_dname
ldns_str2rdf_hex
ldns_str2rdf_int16
ldns_str2rdf_int32
ldns_str2rdf_int8
ldns_str2rdf_loc
ldns_str2rdf_nsap
ldns_str2rdf_nsec
ldns_str2rdf_period
ldns_str2rdf_service
ldns_str2rdf_str
ldns_str2rdf_time
ldns_str2rdf_tsig
ldns_str2rdf_type
ldns_str2rdf_unknown
ldns_str2rdf_wks
ldns_tcp_connect
ldns_tcp_read_wire
ldns_tcp_send
ldns_tcp_send_query
ldns_tsig_algorithm
ldns_tsig_keydata
ldns_tsig_keydata_clone
ldns_tsig_keyname
ldns_tsig_keyname_clone
ldns_tsig_prepare_pkt_wire
ldns_udp_connect
ldns_udp_read_wire
ldns_udp_send
ldns_udp_send_query
ldns_udp_server_connect
ldns_update_get_ad
ldns_update_get_pr
ldns_update_get_soa_mname
ldns_update_get_soa_zone_mname
ldns_update_get_up
ldns_update_get_zo
ldns_update_pkt_new
ldns_update_pkt_tsig_add
ldns_update_resolver_new
ldns_update_send_simple_addr
ldns_update_set_ad
ldns_update_set_pr
ldns_update_set_up
ldns_update_set_zo
ldns_verify
ldns_verify_rrsig
ldns_verify_rrsig_dsa
ldns_verify_rrsig_keylist
ldns_verify_rrsig_rsamd5
ldns_verify_rrsig_rsasha1
ldns_version
ldns_wire2dname
ldns_wire2pkt
ldns_wire2rdf
ldns_wire2rr
ldns_zone_deep_free
ldns_zone_free
ldns_zone_glue_rr_list
ldns_zone_new
ldns_zone_new_frm_fp
ldns_zone_new_frm_fp_l
ldns_zone_print
ldns_zone_push_rr
ldns_zone_push_rr_list
ldns_zone_rr_count
ldns_zone_rrs
ldns_zone_set_rrs
ldns_zone_set_soa
ldns_zone_sign
ldns_zone_soa
mdays
mktime_from_utc
Pad64
Pad64
qsort_rr_compare
qsort_rr_compare_oct
type_0_wireformat
type_a6_wireformat
type_aaaa_wireformat
type_afsdb_wireformat
type_apl_wireformat
type_atma_wireformat
type_a_wireformat
type_cert_wireformat
type_cname_wireformat
type_dname_wireformat
type_dnskey_wireformat
type_ds_wireformat
type_eid_wireformat
type_gpos_wireformat
type_hinfo_wireformat
type_ipseckey_wireformat
type_isdn_wireformat
type_key_wireformat
type_kx_wireformat
type_loc_wireformat
type_mb_wireformat
type_md_wireformat
type_mf_wireformat
type_mg_wireformat
type_minfo_wireformat
type_mr_wireformat
type_mx_wireformat
type_naptr_wireformat
type_nimloc_wireformat
type_nsap_ptr_wireformat
type_nsap_wireformat
type_nsec_wireformat
type_ns_wireformat
type_nxt_wireformat
type_ptr_wireformat
type_px_wireformat
type_rp_wireformat
type_rrsig_wireformat
type_rt_wireformat
type_sig_wireformat
type_sink_wireformat
type_soa_wireformat
type_srv_wireformat
type_sshfp_wireformat
type_tsig_wireformat
type_wks_wireformat
type_x25_wireformat
xprintf_rdf
xprintf_rr
SHAR_EOF
  (set 20 05 11 15 14 47 36 '05-nm.known-good-sym'; eval "$shar_touch") &&
  chmod 0600 '05-nm.known-good-sym' ||
  $echo 'restore of' '05-nm.known-good-sym' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '05-nm.known-good-sym:' 'MD5 check failed'
2bba0fab51597a3df126b223fb54a9c6  05-nm.known-good-sym
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '05-nm.known-good-sym'`"
    test 11689 -eq "$shar_count" ||
    $echo '05-nm.known-good-sym:' 'original size' '11689,' 'current size' "$shar_count!"
  fi
fi
# ============= 05-nm.test ==============
if test -f '05-nm.test' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '05-nm.test' '(file already exists)'
else
  $echo 'x -' extracting '05-nm.test' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > '05-nm.test' &&
# #-- 05-nm.test --#
# source the master var file when it's there
[ -f ../.tpkg.var.master ] && source ../.tpkg.var.master
# use .tpkg.var.test for in test variable passing
[ -f .tpkg.var.test ] && source .tpkg.var.test
# svnserve resets the path, you may need to adjust it, like this:
PATH=$PATH:/usr/sbin:/sbin:/usr/local/bin:/usr/local/sbin:.
X
LIB=../../lib/libldns-*.so
X
# get the libdns symbols
nm $LIB | grep ' [T|D|r|t] '| grep -v '\.L.*' | grep -v '__.*' |\
awk '{ print $3 }' | sort > 05-nm.current-sym
X
wdiff 05-nm.current-sym 05-nm.known-good-sym
fail=$?
rm -f 05-nm.current-sym
X
case $OSTYPE in
X        linux*)
X                exit $fail
X        ;;
X        freebsd*)
X                exit 0
X        ;;
esac
SHAR_EOF
  (set 20 05 11 15 14 55 22 '05-nm.test'; eval "$shar_touch") &&
  chmod 0600 '05-nm.test' ||
  $echo 'restore of' '05-nm.test' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '05-nm.test:' 'MD5 check failed'
b5009012109725f19c918fdcabb8e727  05-nm.test
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '05-nm.test'`"
    test 718 -eq "$shar_count" ||
    $echo '05-nm.test:' 'original size' '718,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh01980
exit 0
