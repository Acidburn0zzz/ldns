#!/bin/sh
# This is a shell archive (produced by GNU sharutils 4.2.1).
# To extract the files from this archive, save it to some FILE, remove
# everything before the `!/bin/sh' line above, then type `sh FILE'.
#
# Made on 2006-04-04 14:29 CEST by <miekg@floep>.
# Source directory was `/home/miekg/svn/libdns/trunk/test/12.unit-tests-dnssec.dir'.
#
# Existing files will *not* be overwritten unless `-c' is specified.
#
# This shar contains:
# length mode       name
# ------ ---------- ------------------------------------------
#   2871 -rw------- 12.unit-tests-dnssec.c
#   1664 -rw------- 12.unit-tests-dnssec.configure.ac
#    415 -rw------- 12.unit-tests-dnssec.dsc
#     99 -rw------- 12.unit-tests-dnssec.help
#    889 -rw------- 12.unit-tests-dnssec.Makefile
#    886 -rw------- 12.unit-tests-dnssec.Makefile.in
#   1019 -rw------- 12.unit-tests-dnssec.pre
#    428 -rw------- 12.unit-tests-dnssec.test
#
save_IFS="${IFS}"
IFS="${IFS}:"
gettext_dir=FAILED
locale_dir=FAILED
first_param="$1"
for dir in $PATH
do
  if test "$gettext_dir" = FAILED && test -f $dir/gettext \
     && ($dir/gettext --version >/dev/null 2>&1)
  then
    set `$dir/gettext --version 2>&1`
    if test "$3" = GNU
    then
      gettext_dir=$dir
    fi
  fi
  if test "$locale_dir" = FAILED && test -f $dir/shar \
     && ($dir/shar --print-text-domain-dir >/dev/null 2>&1)
  then
    locale_dir=`$dir/shar --print-text-domain-dir`
  fi
done
IFS="$save_IFS"
if test "$locale_dir" = FAILED || test "$gettext_dir" = FAILED
then
  echo=echo
else
  TEXTDOMAINDIR=$locale_dir
  export TEXTDOMAINDIR
  TEXTDOMAIN=sharutils
  export TEXTDOMAIN
  echo="$gettext_dir/gettext -s"
fi
if touch -am -t 200112312359.59 $$.touch >/dev/null 2>&1 && test ! -f 200112312359.59 -a -f $$.touch; then
  shar_touch='touch -am -t $1$2$3$4$5$6.$7 "$8"'
elif touch -am 123123592001.59 $$.touch >/dev/null 2>&1 && test ! -f 123123592001.59 -a ! -f 123123592001.5 -a -f $$.touch; then
  shar_touch='touch -am $3$4$5$6$1$2.$7 "$8"'
elif touch -am 1231235901 $$.touch >/dev/null 2>&1 && test ! -f 1231235901 -a -f $$.touch; then
  shar_touch='touch -am $3$4$5$6$2 "$8"'
else
  shar_touch=:
  echo
  $echo 'WARNING: not restoring timestamps.  Consider getting and'
  $echo "installing GNU \`touch', distributed in GNU File Utilities..."
  echo
fi
rm -f 200112312359.59 123123592001.59 123123592001.5 1231235901 $$.touch
#
if mkdir _sh23566; then
  $echo 'x -' 'creating lock directory'
else
  $echo 'failed to create lock directory'
  exit 1
fi
# ============= 12.unit-tests-dnssec.c ==============
if test -f '12.unit-tests-dnssec.c' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '12.unit-tests-dnssec.c' '(file already exists)'
else
  $echo 'x -' extracting '12.unit-tests-dnssec.c' '(binary)'
  sed 's/^X//' << 'SHAR_EOF' | uudecode &&
begin 600 12.unit-tests-dnssec.c
M+RH*("HO"@HC:6YC;'5D92`B8V]N9FEG+F@B"@HC:6YC;'5D92`\;&1N<R]D
M;G,N:#X*"@IC:&5C:U]L9&YS7V-A;&-?:V5Y=&%G7W!A<G0H8V]N<W0@8VAA
M<B`J:V5Y7W-T<BP@=6EN=#$V7W0@97AP96-T961?:V5Y=&%G*0I["@EU:6YT
M,39?="!K97ET86<["@EL9&YS7W-T871U<R!R97-U;'0@/2!,1$Y37U-40515
M4U]/2SL*"0H);&1N<U]R<B`J:V5Y7W)R.PH)"@EI9B`H;&1N<U]R<E]N97=?
M9G)M7W-T<B@F:V5Y7W)R+"!K97E?<W1R+"`P+"!.54Q,+"!.54Q,*2`A/0H)
M"0E,1$Y37U-405154U]/2RD@>PH)"7!R:6YT9B@B2V5Y(&-R96%T:6]N(&9A
M:6QE9"XB*3L*"0EP<FEN=&8H(DME>3H@)7-<;B(L(&ME>5]S='(I.PH)"7)E
M<W5L="`]($Q$3E-?4U1!5%537T524CL*"7T@96QS92!["@D):V5Y=&%G(#T@
M;&1N<U]C86QC7VME>71A9RAK97E?<G(I.PH)"6EF("AK97ET86<@/3T@97AP
M96-T961?:V5Y=&%G*2!["@D)"7!R:6YT9B@B2V5Y=&%G(#$@8V]R<F5C="XB
M*3L*"0E](&5L<V4@>PH)"0EP<FEN=&8H(D)A9"!K97ET86<L('-H;W5L9"!B
M92`E=2`H9V]T("5U*69O<CI<;B(L(&5X<&5C=&5D7VME>71A9RP@:V5Y=&%G
M*3L*"0D)<')I;G1F*"(E<UQN(BP@:V5Y7W-T<BD["@D)"7)E<W5L="`]($Q$
M3E-?4U1!5%537T524CL*"0E]"@D);&1N<U]R<E]F<F5E*&ME>5]R<BD["@E]
M"@D*"7)E='5R;B!R97-U;'0["GT*"F-H96-K7VQD;G-?8V%L8U]K97ET86<H
M*2`*>PH)8V]N<W0@8VAA<B`J:V5Y7W-T<CL*"75I;G0Q-E]T(&5X<&5C=&5D
M7VME>71A9SL*"@EL9&YS7W-T871U<R!R97-U;'0@/2!,1$Y37U-405154U]/
M2SL*"0H):V5Y7W-T<B`](")J96QT92YN;&YE=&QA8G,N;FPN($E.($1.4TM%
M62`R-38@,R`U($%13W)A3&9Z87)(06Q&<VM61W=!1VY8,$Q2:FQC3VE/-GDU
M5TTT2WHK479:.798,CAH-&Q/=FYF(&0U=&MX;EIM-T523%1!2F]&<2LQ=R]W
M;#=66',R27-Z-S5"4UHW3%%H,T]4,GA8;E,V5E0U6GA8(&MO+U5#3V1O1VE+
M6EHV,VI(6C!J3E-40UEY."LU<F9V=U)$.',S9T=U17)P-4MC2&<S5CA63%5+
M(%-$3DY%43T](CL*"65X<&5C=&5D7VME>71A9R`](#0R.#8P.PH):68@*&-H
M96-K7VQD;G-?8V%L8U]K97ET86=?<&%R="AK97E?<W1R+"!E>'!E8W1E9%]K
M97ET86<I("$]($Q$3E-?4U1!5%537T]+*2!["@D)<F5S=6QT(#T@3$1.4U]3
M5$%455-?15)2.PH)?0H)"@EK97E?<W1R(#T@(G-U8BYJ96QT92YN;&YE=&QA
M8G,N;FPN($E.($1.4TM%62`R-38@,R`S($-)-$-U:EIJ<G<T:&IP05`X>DUY
M;G1+15%*0E8Y-DTP3VA:-4A#95HU2S0V94=(14I51S929VQ1($TR3U9962]Q
M4G%!3$1S+U!T>FLK2&1B,&]6,U)&,"MF54$U*U(U9U@Q879G8FAS15!H=DE)
M;EE"($]0<TYA6%=+34IA<G!(,F(X>$AK1C18450T5&1Q068X;6%18TMK+U)U
M:F5+4C96;EAB861:54Y+("M36G-.5U-B841U0TAB5#!R5W!/.6Y68F9O455N
M3E=P:S%H;4]H-&]);$9D0G1"5%!C:S-.1"MG(&11<FHU94IC4W@P>G=Q:DI"
M2DE#*TIX5W0R<D9T245Z=&9(>&UM:F)E9&1#,E1,-#%/+T%&4$I-('95:#@U
M9&YD,V(Q9UI28S55=D$W6C)),BM:1#$V1FI.<FUU3FM.16IN;&5T-V]I2D%#
M,&9E>GI8('-:64-J=TAF17EE85,R65A'>GI:0V51<$U">F5"4F@S97$X<%9N
M.'(T06%28TYT,6=N6&)69&ID(%11=G`U9&5)1V]A04A-;#-Y>31N,%%M6&=2
M<V-327-Y9DLY1VXW3G)L1U)L0WAS.7)F5G=C5T-$($YJ,DUU24-O;5A'2559
M2E<K8VLP4FAK.5-Q-DTS;VYH4VI)5%DY+WDO4W!W0FYA-E-,<$9D<$5M(&),
M64M%4S1G4VA4>&IT;6A*4WET2#!P;V]Q.7%X2CAK>4@K22(["@EE>'!E8W1E
M9%]K97ET86<@/2`Q,S`R-CL*"6EF("AC:&5C:U]L9&YS7V-A;&-?:V5Y=&%G
M7W!A<G0H:V5Y7W-T<BP@97AP96-T961?:V5Y=&%G*2`A/2!,1$Y37U-40515
M4U]/2RD@>PH)"7)E<W5L="`]($Q$3E-?4U1!5%537T524CL*"7T*"0H):V5Y
M7W-T<B`](")S=6(N<W5B+FIE;'1E+FYL;F5T;&%B<RYN;"X@24X@1$Y32T59
M(#(U-B`S(#$@05%025$R4TYC;$UQ9$AU.&%F>%9D8DE64B\R,'9L1'`R6F-%
M2S5X1GA$2U94=6YU<3A"3$%0<C0@1G9N8D)1-$%K3EEC:&5C3F-M479+:2]J
M2C=X=U=Q>7%-054Q;"MD-FU:551&-G-#,'5G.5=1+U$@>D<Y,VY/0E9,=T=B
M;4=45%AH<D4O<%)H4R]O,39!8C(P>G-B8V1!8C=00VA16%-G0GE*2W94.%<@
M6'5M2C-&9$],:'=M<5%!;D9U36Y:0S<Q+TA!8S17:D$K,GI',5-.6&YB5&Y#
M.%$O-"]&9R]Y9V@@,D=J5#E#:C!H:$92*T$R2&8K4EAV:TMS1'=H9'A7=TIF
M5RM):$%(571W3DMY9'-%=EI--552,DD@4%-Y=&9Z6B]F5TM%>#5";'A,6EI.
M2WIO94)T1DAJ2%-E6E4U3&(U1$9N44IX-6QC<V0U35`R93@@*W!P:E9L9S,B
M.PH)97AP96-T961?:V5Y=&%G(#T@,C(Q,#0["@EI9B`H8VAE8VM?;&1N<U]C
M86QC7VME>71A9U]P87)T*&ME>5]S='(L(&5X<&5C=&5D7VME>71A9RD@(3T@
M3$1.4U]35$%455-?3TLI('L*"0ER97-U;'0@/2!,1$Y37U-405154U]%4E([
M"@E]"@HO*B!T96UP;&%T92!F;W(@861D:6YG(&5X=')A(&ME>7,*"6ME>5]S
M='(@/2`B(CL*"65X<&5C=&5D7VME>71A9R`](#L*"6EF("AC:&5C:U]L9&YS
M7V-A;&-?:V5Y=&%G7W!A<G0H:V5Y7W-T<BP@97AP96-T961?:V5Y=&%G*2`A
M/2!,1$Y37U-405154U]/2RD@>PH)"7)E<W5L="`]($Q$3E-?4U1!5%537T52
M4CL*"7T**B\*"0H)<F5T=7)N(')E<W5L=#L*?0H*:6YT(&UA:6XH=F]I9"D*
M>PH):6YT(')E<W5L="`]($58251?4U5#0T534SL*"0H):68@*&-H96-K7VQD
M;G-?8V%L8U]K97ET86<H*2`A/2!,1$Y37U-405154U]/2RD@>PH)"7!R:6YT
M9B@B;&1N<U]C86QC7VME>71A9R@I(&9A:6QE9"Y<;B(I.PH)"7)E<W5L="`]
D($58251?1D%)3%5213L*"7T*"@EE>&ET*')E<W5L="D["GT*
`
end
SHAR_EOF
  (set 20 06 04 04 14 29 38 '12.unit-tests-dnssec.c'; eval "$shar_touch") &&
  chmod 0600 '12.unit-tests-dnssec.c' ||
  $echo 'restore of' '12.unit-tests-dnssec.c' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '12.unit-tests-dnssec.c:' 'MD5 check failed'
5dae4d7c4fbce04da23b458b7ab4bab5  12.unit-tests-dnssec.c
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '12.unit-tests-dnssec.c'`"
    test 2871 -eq "$shar_count" ||
    $echo '12.unit-tests-dnssec.c:' 'original size' '2871,' 'current size' "$shar_count!"
  fi
fi
# ============= 12.unit-tests-dnssec.configure.ac ==============
if test -f '12.unit-tests-dnssec.configure.ac' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '12.unit-tests-dnssec.configure.ac' '(file already exists)'
else
  $echo 'x -' extracting '12.unit-tests-dnssec.configure.ac' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > '12.unit-tests-dnssec.configure.ac' &&
#                                               -*- Autoconf -*-
# Process this file with autoconf to produce a configure script.
X
AC_PREREQ(2.57)
AC_INIT(drill, 1.1.0, ldns-team@nlnetlabs.nl, ldns-team)
AC_CONFIG_SRCDIR([12.unit-tests-dnssec.c])
X
AC_AIX
# Checks for programs.
AC_PROG_CC
AC_PROG_MAKE_SET
X
# Checks for libraries.
# Checks for header files.
#AC_HEADER_STDC
#AC_HEADER_SYS_WAIT
# do the very minimum - we can always extend this
AC_CHECK_HEADERS([getopt.h stdlib.h stdio.h assert.h netinet/in.hctype.h time.h])
AC_CHECK_HEADERS(sys/param.h sys/mount.h,,,
[
X  [
X   #if HAVE_SYS_PARAM_H
X   # include <sys/param.h>
X   #endif
X  ]
])
X
# check for ldns
AC_ARG_WITH(ldns, 
X	AC_HELP_STRING([--with-ldns=PATH        specify prefix of path of ldns library to use])
X	,
X	[
X		specialldnsdir="$withval"
X		CPPFLAGS="$CPPFLAGS -I$withval/include"
X		LDFLAGS="$LDFLAGS -L$withval/lib"
X	]
)
X
AC_CHECK_LIB(ldns, ldns_rr_new,, [
X	AC_MSG_ERROR([Can't find ldns library])
X	]
)
X
AC_CHECK_HEADER(ldns/dns.h,,  [
X	AC_MSG_ERROR([Can't find ldns headers])
X	]
)
X
AH_BOTTOM([
X
#include <stdio.h>
#include <string.h>
#include <unistd.h>
#include <assert.h>
X
#if STDC_HEADERS
#include <stdlib.h>
#include <stddef.h>
#endif
X
#ifdef HAVE_STDINT_H
#include <stdint.h>
#endif
X
#ifdef HAVE_SYS_SOCKET_H
#include <sys/socket.h>
#endif
X
#ifdef HAVE_NETINET_IN_H
#include <netinet/in.h>
#endif
X
#ifdef HAVE_ARPA_INET_H
#include <arpa/inet.h>
#endif
X
#ifdef HAVE_TIME_H
#include <time.h>
#endif
])
X
X
#AC_CHECK_FUNCS([mkdir rmdir strchr strrchr strstr])
X
#AC_DEFINE_UNQUOTED(SYSCONFDIR, "$sysconfdir")
X
AC_CONFIG_FILES([12.unit-tests-dnssec.Makefile])
AC_CONFIG_HEADER([config.h])
AC_OUTPUT
SHAR_EOF
  (set 20 06 01 20 11 45 07 '12.unit-tests-dnssec.configure.ac'; eval "$shar_touch") &&
  chmod 0600 '12.unit-tests-dnssec.configure.ac' ||
  $echo 'restore of' '12.unit-tests-dnssec.configure.ac' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '12.unit-tests-dnssec.configure.ac:' 'MD5 check failed'
ad2a323725570dc651c7bdf52dfe3ff2  12.unit-tests-dnssec.configure.ac
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '12.unit-tests-dnssec.configure.ac'`"
    test 1664 -eq "$shar_count" ||
    $echo '12.unit-tests-dnssec.configure.ac:' 'original size' '1664,' 'current size' "$shar_count!"
  fi
fi
# ============= 12.unit-tests-dnssec.dsc ==============
if test -f '12.unit-tests-dnssec.dsc' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '12.unit-tests-dnssec.dsc' '(file already exists)'
else
  $echo 'x -' extracting '12.unit-tests-dnssec.dsc' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > '12.unit-tests-dnssec.dsc' &&
BaseName: 12.unit-tests-dnssec
Version: 1.0
Description: Run unit tests on dnssec.c
CreationDate: Fri Jan 20 10:51:01 CET 2006
Maintainer: Jelte Jansen
Category: 
Component:
CmdDepends: 
Depends: 
Help: 12.unit-tests-dnssec.help
Pre: 12.unit-tests-dnssec.pre
Post: 
Test: 12.unit-tests-dnssec.test
AuxFiles: 12.unit-tests-dnssec.Makefile.in 12.unit-tests-dnssec.configure.ac 12.unit-tests-dnssec.c
Passed:
Failure:
SHAR_EOF
  (set 20 06 01 20 11 35 13 '12.unit-tests-dnssec.dsc'; eval "$shar_touch") &&
  chmod 0600 '12.unit-tests-dnssec.dsc' ||
  $echo 'restore of' '12.unit-tests-dnssec.dsc' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '12.unit-tests-dnssec.dsc:' 'MD5 check failed'
974276701ad71e8a315631531e94406f  12.unit-tests-dnssec.dsc
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '12.unit-tests-dnssec.dsc'`"
    test 415 -eq "$shar_count" ||
    $echo '12.unit-tests-dnssec.dsc:' 'original size' '415,' 'current size' "$shar_count!"
  fi
fi
# ============= 12.unit-tests-dnssec.help ==============
if test -f '12.unit-tests-dnssec.help' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '12.unit-tests-dnssec.help' '(file already exists)'
else
  $echo 'x -' extracting '12.unit-tests-dnssec.help' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > '12.unit-tests-dnssec.help' &&
TODO :p
Please describe how to use this test.
i.e. tpkg -a ARG exe testname:
X   ARG is used to ...
SHAR_EOF
  (set 20 06 01 20 11 25 20 '12.unit-tests-dnssec.help'; eval "$shar_touch") &&
  chmod 0600 '12.unit-tests-dnssec.help' ||
  $echo 'restore of' '12.unit-tests-dnssec.help' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '12.unit-tests-dnssec.help:' 'MD5 check failed'
5393eca947bc397262d46982146ea760  12.unit-tests-dnssec.help
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '12.unit-tests-dnssec.help'`"
    test 99 -eq "$shar_count" ||
    $echo '12.unit-tests-dnssec.help:' 'original size' '99,' 'current size' "$shar_count!"
  fi
fi
# ============= 12.unit-tests-dnssec.Makefile ==============
if test -f '12.unit-tests-dnssec.Makefile' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '12.unit-tests-dnssec.Makefile' '(file already exists)'
else
  $echo 'x -' extracting '12.unit-tests-dnssec.Makefile' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > '12.unit-tests-dnssec.Makefile' &&
# Standard installation pathnames
# See the file LICENSE for the license
SHELL = /bin/sh
VERSION = 1.1.0
basesrcdir = $(shell basename `pwd`)
srcdir = .
prefix  = /usr/local
exec_prefix = ${prefix}
bindir = ${exec_prefix}/bin
mandir = ${prefix}/man
X
CC = gcc
CFLAGS = -g -O2
CPPFLAGS =  -I../..//include
LDFLAGS =  -L../..//lib
LIBS = -lldns 
X
COMPILE         = $(CC) $(CPPFLAGS) $(CFLAGS)
LINK            = $(CC) $(CFLAGS) $(LDFLAGS) $(LIBS)
X
HEADER		= config.h
TESTS		= 12-unit-tests-dnssec
X
X.PHONY:	all clean realclean
%.o:
X	$(COMPILE) -c $(srcdir)/$*.c
X
all:	$(TESTS)
X
12-unit-tests-dnssec:	12-unit-tests-dnssec.o
X		$(LINK) -o $@ $+ 
X
clean:
X	rm -f *.o
X	rm -f $(TESTS)
X	rm -f lua-rns
X
realclean: clean
X	rm -rf autom4te.cache/
X	rm -f config.log config.status aclocal.m4 config.h.in configure Makefile
X	rm -f config.h
X
confclean: clean
X	rm -rf config.log config.status config.h Makefile
SHAR_EOF
  (set 20 06 01 20 11 36 04 '12.unit-tests-dnssec.Makefile'; eval "$shar_touch") &&
  chmod 0600 '12.unit-tests-dnssec.Makefile' ||
  $echo 'restore of' '12.unit-tests-dnssec.Makefile' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '12.unit-tests-dnssec.Makefile:' 'MD5 check failed'
3114edd7c481b21331efbd1d93e4627f  12.unit-tests-dnssec.Makefile
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '12.unit-tests-dnssec.Makefile'`"
    test 889 -eq "$shar_count" ||
    $echo '12.unit-tests-dnssec.Makefile:' 'original size' '889,' 'current size' "$shar_count!"
  fi
fi
# ============= 12.unit-tests-dnssec.Makefile.in ==============
if test -f '12.unit-tests-dnssec.Makefile.in' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '12.unit-tests-dnssec.Makefile.in' '(file already exists)'
else
  $echo 'x -' extracting '12.unit-tests-dnssec.Makefile.in' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > '12.unit-tests-dnssec.Makefile.in' &&
# Standard installation pathnames
# See the file LICENSE for the license
SHELL = @SHELL@
VERSION = @PACKAGE_VERSION@
basesrcdir = $(shell basename `pwd`)
srcdir = @srcdir@
prefix  = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@
mandir = @mandir@
X
CC = @CC@
CFLAGS = @CFLAGS@
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
X
COMPILE         = $(CC) $(CPPFLAGS) $(CFLAGS)
LINK            = $(CC) $(CFLAGS) $(LDFLAGS) $(LIBS)
X
HEADER		= config.h
TESTS		= 12.unit-tests-dnssec
X
X.PHONY:	all clean realclean
%.o:
X	$(COMPILE) -c $(srcdir)/$*.c
X
all:	$(TESTS)
X
12.unit-tests-dnssec:	12.unit-tests-dnssec.o
X		$(LINK) -o $@ $+ 
X
clean:
X	rm -f *.o
X	rm -f $(TESTS)
X	rm -f lua-rns
X
realclean: clean
X	rm -rf autom4te.cache/
X	rm -f config.log config.status aclocal.m4 config.h.in configure Makefile
X	rm -f config.h
X
confclean: clean
X	rm -rf config.log config.status config.h Makefile
SHAR_EOF
  (set 20 06 01 20 11 42 18 '12.unit-tests-dnssec.Makefile.in'; eval "$shar_touch") &&
  chmod 0600 '12.unit-tests-dnssec.Makefile.in' ||
  $echo 'restore of' '12.unit-tests-dnssec.Makefile.in' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '12.unit-tests-dnssec.Makefile.in:' 'MD5 check failed'
fba444d5fb79995749071fb8a155f58c  12.unit-tests-dnssec.Makefile.in
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '12.unit-tests-dnssec.Makefile.in'`"
    test 886 -eq "$shar_count" ||
    $echo '12.unit-tests-dnssec.Makefile.in:' 'original size' '886,' 'current size' "$shar_count!"
  fi
fi
# ============= 12.unit-tests-dnssec.pre ==============
if test -f '12.unit-tests-dnssec.pre' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '12.unit-tests-dnssec.pre' '(file already exists)'
else
  $echo 'x -' extracting '12.unit-tests-dnssec.pre' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > '12.unit-tests-dnssec.pre' &&
# #-- 10-older-test.pre--#
# source the master var file when it's there
[ -f ../.tpkg.var.master ] && source ../.tpkg.var.master
# use .tpkg.var.test for in test variable passing
[ -f .tpkg.var.test ] && source .tpkg.var.test
# svnserve resets the path, you may need to adjust it, like this:
export PATH=$PATH:/usr/sbin:/sbin:/usr/local/bin:/usr/local/sbin:.
X
X
case $OSTYPE in
X        linux*)
X                autoconf 12.unit-tests-dnssec.configure.ac > configure && \
X                chmod +x configure && \
X                autoheader 12.unit-tests-dnssec.configure.ac &&\
X                ./configure --with-ldns=../../ && \
X                make -f 12.unit-tests-dnssec.Makefile
X        ;;
X        freebsd*)
X                autoconf259 12.unit-tests-dnssec.configure.ac > configure &&\
X                chmod +x configure && \
X                autoheader259 12.unit-tests-dnssec.configure.ac && \
X                ./configure --with-ldns=../../ && \
X                gmake -f 12.unit-tests-dnssec.Makefile
X        ;;
esac
SHAR_EOF
  (set 20 06 01 20 11 42 04 '12.unit-tests-dnssec.pre'; eval "$shar_touch") &&
  chmod 0600 '12.unit-tests-dnssec.pre' ||
  $echo 'restore of' '12.unit-tests-dnssec.pre' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '12.unit-tests-dnssec.pre:' 'MD5 check failed'
41e6f16e016df6e105d9fdf6c92934f2  12.unit-tests-dnssec.pre
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '12.unit-tests-dnssec.pre'`"
    test 1019 -eq "$shar_count" ||
    $echo '12.unit-tests-dnssec.pre:' 'original size' '1019,' 'current size' "$shar_count!"
  fi
fi
# ============= 12.unit-tests-dnssec.test ==============
if test -f '12.unit-tests-dnssec.test' && test "$first_param" != -c; then
  $echo 'x -' SKIPPING '12.unit-tests-dnssec.test' '(file already exists)'
else
  $echo 'x -' extracting '12.unit-tests-dnssec.test' '(text)'
  sed 's/^X//' << 'SHAR_EOF' > '12.unit-tests-dnssec.test' &&
# #-- 10-older-test.test --#
# source the master var file when it's there
[ -f ../.tpkg.var.master ] && source ../.tpkg.var.master
# use .tpkg.var.test for in test variable passing
[ -f .tpkg.var.test ] && source .tpkg.var.test
# svnserve resets the path, you may need to adjust it, like this:
#PATH=$PATH:/usr/sbin:/sbin:/usr/local/bin:/usr/local/sbin:.
X
export LD_LIBRARY_PATH=../../lib
X
# run the test
X./12.unit-tests-dnssec
SHAR_EOF
  (set 20 06 01 20 11 40 20 '12.unit-tests-dnssec.test'; eval "$shar_touch") &&
  chmod 0600 '12.unit-tests-dnssec.test' ||
  $echo 'restore of' '12.unit-tests-dnssec.test' 'failed'
  if ( md5sum --help 2>&1 | grep 'sage: md5sum \[' ) >/dev/null 2>&1 \
  && ( md5sum --version 2>&1 | grep -v 'textutils 1.12' ) >/dev/null; then
    md5sum -c << SHAR_EOF >/dev/null 2>&1 \
    || $echo '12.unit-tests-dnssec.test:' 'MD5 check failed'
3682251c0eeec73c2e1638220a56f99f  12.unit-tests-dnssec.test
SHAR_EOF
  else
    shar_count="`LC_ALL= LC_CTYPE= LANG= wc -c < '12.unit-tests-dnssec.test'`"
    test 428 -eq "$shar_count" ||
    $echo '12.unit-tests-dnssec.test:' 'original size' '428,' 'current size' "$shar_count!"
  fi
fi
rm -fr _sh23566
exit 0
