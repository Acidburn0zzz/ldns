# Standard installation pathnames
# See the file LICENSE for the license
SHELL = @SHELL@
VERSION = @PACKAGE_VERSION@
basesrcdir = $(shell basename `pwd`)
srcdir = @srcdir@
prefix  = @prefix@
exec_prefix = @exec_prefix@
bindir = @bindir@
mandir = @mandir@
libtool = @libtool@

CC = @CC@
CFLAGS = @CFLAGS@ -I. -I${srcdir}
CPPFLAGS = @CPPFLAGS@ 
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
RUNTIME_PATH = @RUNTIME_PATH@
LDNSDIR = @LDNSDIR@

INSTALL = $(srcdir)/../install-sh 

COMPILE         = $(CC) $(CPPFLAGS) $(CFLAGS)
LINK		= $(libtool) --tag=CC --mode=link $(CC) $(CFLAGS) $(LDFLAGS) $(LIBS) $(RUNTIME_PATH)
LINK_STATIC	= $(libtool) --tag=CC --mode=link $(CC) $(CFLAGS) -static $(LDFLAGS) $(LIBS) $(RUNTIME_PATH)

LINT		= splint
LINTFLAGS	= +quiet -weak -warnposix -unrecog -formatcode -Din_addr_t=uint32_t -Du_int=unsigned -Du_char=uint8_t -D__u16=uint16_t -D__u32=uint32_t -preproc -D__signed__=signed -fixedformalarray


HEADER		= config.h
MAIN_SOURCES = ldns-read-zone.c \
		  ldns-mx.c \
		  ldns-chaos.c \
		  ldns-update.c \
		  ldns-keygen.c \
		  ldns-key2ds.c \
		  ldns-signzone.c \
		  ldns-version.c \
		  ldns-rrsig.c \
		  ldns-walk.c \
		  ldns-zsplit.c \
		  ldns-zcat.c \
		  ldns-dpa.c \
		  ldns-resolver.c \
		  ldnsd.c \
		  ldns-keyfetcher.c \
		  ldns-notify.c \
		  ldns-testns.c \
		  ldns-compare-zones.c \
		  ldns-verify-zone.c \
		  ldns-revoke.c \
		  ldns-nsec3-hash.c
OTHER_SOURCES = ldns-testpkts.c

PROGRAMS=$(MAIN_SOURCES:.c=)

.PHONY:	all clean realclean all-static
.SECONDARY: $(MAIN_SOURCES:.c=.o) $(OTHER_SOURCES:.c=.o)

all:	$(addsuffix .prg,$(PROGRAMS))

all-static: $(addsuffix .stc,$(PROGRAMS))

%.o:    $(srcdir)/%.c
	$(COMPILE) -o $@ -c $<

# ldns-testns uses more sources.
ldns-testns.o: $(srcdir)/ldns-testns.c $(srcdir)/ldns-testpkts.c $(srcdir)/ldns-testpkts.h
ldns-testns.prg: ldns-testpkts.o
ldns-testns.stc: ldns-testpkts.o

%.prg:  %.o
	@if test ! -f $(@:.prg=) -o $< -nt $(@:.prg=); then \
	echo $(LINK) -o $(@:.prg=) $^ ; \
	$(LINK) -o $(@:.prg=) $^ ; \
	fi

%.stc:	%.o
	@if test ! -f $@ -o $< -nt $@; then \
	echo $(LINK_STATIC) -o $@ $^ ; \
	$(LINK_STATIC) -o $@ $^ ; \
	fi

lint:
	for i in $(MAIN_SOURCES) $(OTHER_SOURCES); do \
		$(LINT) $(LINTFLAGS) -I. -I$(srcdir) $(srcdir)/$$i $(CPPFLAGS); \
		if [ $$? -ne 0 ] ; then exit 1 ; fi ; \
	done

clean:
	rm -f *.o *.lo 
	rm -rf .libs
	rm -f $(PROGRAMS) 
	rm -f $(addsuffix .stc,$(PROGRAMS))

realclean: clean
	rm -rf autom4te.cache/
	rm -f config.log config.status aclocal.m4 config.h.in configure Makefile
	rm -f config.h

confclean: clean
	rm -rf config.log config.status config.h Makefile

install:	$(PROGRAMS)
		$(INSTALL) -d -m 755 $(DESTDIR)$(bindir)
		$(INSTALL) -d -m 755 $(DESTDIR)$(mandir)
		$(INSTALL) -d -m 755 $(DESTDIR)$(mandir)/man1
		for i in $(PROGRAMS); do \
			$(libtool) --tag=CC --mode=install ${INSTALL} -c $$i $(DESTDIR)$(bindir) ; \
			$(INSTALL) -c -m 644 $(srcdir)/$$i.1 $(DESTDIR)$(mandir)/man1/$$i.1 ; \
			done
		exit 0
 
install-static:	all-static
		$(INSTALL) -d -m 755 $(DESTDIR)$(bindir)
		$(INSTALL) -d -m 755 $(DESTDIR)$(mandir)
		$(INSTALL) -d -m 755 $(DESTDIR)$(mandir)/man1
		for i in $(PROGRAMS); do \
			$(libtool) --tag=CC --mode=install ${INSTALL} -c $$i.stc $(DESTDIR)$(bindir) ; \
			$(INSTALL) -c -m 644 $(srcdir)/$$i.1 $(DESTDIR)$(mandir)/man1/$$i.1 ; \
			done
		exit 0
		
uninstall:
		for i in $(PROGRAMS); do \
			rm -f $(DESTDIR)$(bindir)/$$i ; \
			rm -f $(DESTDIR)$(mandir)/man1/$$i.1 ; \
			done
		exit 0
		rmdir -p $(DESTDIR)$(bindir)
		rmdir -p $(DESTDIR)$(mandir)
