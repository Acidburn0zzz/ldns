# Standard installation pathnames
# See the file LICENSE for the license
SHELL 		= @SHELL@
srcdir 		= @srcdir@
basesrcdir	= $(shell basename `pwd`)
prefix  	= @prefix@
exec_prefix 	= @exec_prefix@
bindir 		= @bindir@
mandir 		= @mandir@

CC 		= @CC@
CPPFLAGS	= @CPPFLAGS@ @DEFS@ -I. -I$(srcdir)
CFLAGS 		= @CFLAGS@
LDFLAGS		= @LDFLAGS@	-lcrypto
LIBS 		= @LIBS@
LIBOBJS		= @LIBOBJS@
DATE		= $(shell date +%Y%m%d)
LIBTOOL		= @srcdir@/libtool

LINT		= splint
LINTFLAGS	= +quiet -weak -warnposix -unrecog -Din_addr_t=uint32_t -Du_int=unsigned -Du_char=uint8_t 

#INSTALL = $(srcdir)/install-sh -c
#INSTALL_PROGRAM = $(INSTALL)

LIBDNS_SOURCES	=	rdata.c util.c rr.c packet.c wire2host.c \
			host2str.c buffer.c str2host.c resolver.c \
			net.c host2wire.c dname.c dnssec.c keys.c \
			higher.c rr_functions.c
LIBDNS_HEADERS	=	ldns/error.h		\
			ldns/packet.h		\
			ldns/prototype.h 	\
			ldns/rdata.h 		\
			ldns/rr.h		\
			ldns/wire2host.h	\
			ldns/host2str.h		\
			ldns/host2wire.h	\
			ldns/str2host.h		\
			ldns/buffer.h		\
			ldns/resolver.h		\
			ldns/net.h		\
			ldns/dname.h		\
			ldns/dnssec.h		\
			ldns/keys.h		\
			ldns/higher.h		\
			util.h
PROG_SOURCES	=	mx.c
PROG_TARGETS	=	$(PROG_SOURCES:.c=)

LIBDNS_OBJECTS	=	$(LIBDNS_SOURCES:.c=.o)

TEST_SOURCES	=	run-test7.c run-test11.c run-test18.c

#ALL_SOURCES	=	$(TEST_SOURCES) $(LIBDNS_SOURCES) $(PROG_SOURCES)
ALL_SOURCES	=	$(LIBDNS_SOURCES) $(PROG_SOURCES)

TESTS		=	$(TEST_SOURCES:.c=)

COMPILE		= $(CC) $(CPPFLAGS) $(CFLAGS)
COMP_LIB	= $(LIBTOOL) $(CC) $(CPPFLAGS) $(CFLAGS)
LINK		= $(CC) $(CFLAGS) $(LDFLAGS)
LINK_LIB	= $(LIBTOOL) $(CC) $(CFLAGS) $(LDFLAGS)

%.o:	$(srcdir)/%.c
	$(COMPILE) -c $<
#	$(COMP_LIB) -c $<

.PHONY:	clean realclean docclean doc lint test all ar

all:		$(PROG_TARGETS) libldns.a

ar:		libldns.a

libldns.a:	$(LIBDNS_OBJECTS) b64_pton$U.o b64_ntop$U.o
		ar rc libldns.a $(LIBDNS_OBJECTS) b64_pton$U.o b64_ntop$U.o
		ranlib libldns.a

snapshot:	clean testclean
		(rm -rf ../ldns-snap-$(DATE)/)
		(cd .. ; cp -r $(basesrcdir)/ ldns-snap-$(DATE)/)
		(cd .. ; tar --verbose  --exclude ".svn" --create --file ldns-snap-$(DATE).tar.gz --gzip ldns-snap-$(DATE)/)
		(rm -rf ../ldns-snap-$(DATE)/)

mx:		mx.o $(LIBDNS_OBJECTS) $(LIBOBJS)
		$(LINK) ${LIBS} -o $@ $+

# tests

run-test7:	run-test7.o $(LIBDNS_OBJECTS) $(LIBOBJS)
		$(LINK) ${LIBS} -o $@ $+
run-test11:	run-test11.o $(LIBDNS_OBJECTS) $(LIBOBJS)
		$(LINK) ${LIBS} -o $@ $+
run-test18:	run-test18.o $(LIBDNS_OBJECTS) $(LIBOBJS)
		$(LINK) ${LIBS} -o $@ $+

run-test-trace:	run-test-trace.o $(LIBDNS_OBJECTS) $(LIBOBJS)
		$(LINK) ${LIBS} -o $@ $+

doc:	
	doxygen libdns.doxygen

clean:	
	rm -f *.o *.d
	rm -f $(TESTS)
	rm -f $(PROG_TARGETS)
	rm -rf autom4te.cache/
	rm -f config.status
	rm -f config.log
	rm -f libldns.a
	rm -f tags

testclean:
	rm -f $(TESTS)

realclean: clean docclean testclean
	rm -f config.status
	rm -f config.log
	rm -f Makefile
	rm -f config.h
	rm -f config.h.in
	rm -f configure
	rm -f libtool

docclean:
	rm -rf doc/html/
	rm -rf doc/man/
	rm -rf doc/latex/

test7: run-test7
	./run-test7
test11: run-test11
	./run-test11
test18: run-test18
	./run-test18

test: test7 test11 test18

## No need for changes here

lint:
	for i in $(LIBDNS_SOURCES); do \
		$(LINT) $(LINTFLAGS) -I. -I$(srcdir) $(srcdir)/$$i ; \
	done

tags:	*.c *.h ldns/*.[ch]
	ctags *.[ch] ldns/*.[ch]

timegm$U.o:	compat/timegm.c
	$(COMPILE) -c compat/timegm.c -o $@

b64_pton$U.o:	compat/b64_pton.c
	$(COMPILE) -c compat/b64_pton.c -o $@

b64_ntop$U.o:	compat/b64_ntop.c
	$(COMPILE) -c compat/b64_ntop.c -o $@

malloc$U.o:	compat/malloc.c
	$(COMPILE) -c compat/malloc.c -o $@

# Automatic dependencies.
%.d: $(srcdir)/%.c
	$(SHELL) -ec '$(CC) -MM $(CPPFLAGS) $< \
	              | sed '\''s!\(.*\)\.o[ :]*!$(dir $@)\1.o $@ : !g'\'' > $@; \
	              [ -s $@ ] || rm -f $@'

include $(ALL_SOURCES:.c=.d)
